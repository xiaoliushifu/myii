<?php

namespace app\models;

use Yii;
use yii\behaviors\AttributeTypecastBehavior;
use yii\db\ActiveRecord;

class Cars extends ActiveRecord
{

    public function behaviors()
    {
        return [
            'typecast' => [
                // 行为机制实现的一个功能，模型属性的类型转换
                'class' => AttributeTypecastBehavior::className(),
                //如果留空attributeTypes，则根据模型的rules方法自动组装
                'attributeTypes' => [
                    'num' => AttributeTypecastBehavior::TYPE_INTEGER,
                    'year' => AttributeTypecastBehavior::TYPE_INTEGER,
                    'money' => AttributeTypecastBehavior::TYPE_FLOAT,
                    'is_test' => AttributeTypecastBehavior::TYPE_BOOLEAN,
                ],
                //配置【类型转换】发生的时机或场景，默认是save()方法的validate()之后
                'typecastAfterValidate' => true,
                'typecastBeforeSave' => false,
                'typecastAfterFind' => true,
            ],
        ];
    }
    
    /**
     * @return array the validation rules.
     */
    public function rules()
    {
        return [
            ['make', 'string','max'=>'5'],
            ['num', 'integer'],
            ['year', 'string'],
            ['money', 'double'],
            ['is_test', 'boolean'],
        ];
    }

    /**
     * @return array customized attribute labels
     */
    public function attributeLabels()
    {
        return [
            'make' => '制造商',
            'model' => '模型',
            'year' => '年份',
            'money' => '总价',
            'is_test' => '测试',
            'num' => '销量',
        ];
    }

    public function beforeSave($insert)
    {
        //在成功通过验证之后，查看类型转换的结果
        var_dump($this->getAttributes(),'hello');
        return parent::beforeSave($insert); // TODO: Change the autogenerated stub
    }

}
